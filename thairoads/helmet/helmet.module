<?php

/**
 * Implementation of hook_perm().
 */
function helmet_perm() {
  return array(
    'import helmet data',
  );
}

/**
 * Implementation of hook_menu().
 */
function helmet_menu() {

  $items['admin/settings/helmetimport'] = array(
    'title' => 'Helmet Import',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('helmet_provincial_import_form', 'all'),
    'access arguments' => array('import helmet data'),
    'file' => 'includes/helmet.provincial.inc',
  );


  $items['admin/settings/helmetimport/provincial'] = array(
    'title' => 'Helmet Provincial',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('helmet_provincial_import_form', 'provincial'),
    'access arguments' => array('import helmet data'),
    'file' => 'includes/helmet.provincial.inc',
    'weight' => 0,
    'type' => MENU_LOCAL_TASK,
  );

  $items['admin/settings/helmetimport/regional'] = array(
    'title' => 'Helmet Regional',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('helmet_provincial_import_form', 'regional'),
    'access arguments' => array('import helmet data'),
    'file' => 'includes/helmet.provincial.inc',
    'weight' => -1,
    'type' => MENU_LOCAL_TASK,
  );

  $items['admin/settings/helmetimport/all'] = array(
    'title' => 'Helmet All',
    'weight' => -2,
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );

  return $items;
}

/**
 * Implementation of hook_theme().
 */
function helmet_theme() {
  return array(
    'helmet_provincial_import_form' => array(
      'arguments' => array('element' => NULL),
    ),
  );
}

/**
 * 
 */
function theme_helmet_provincial_import_form($element) {
  $rows = array();
  foreach (element_children($element) as $key) {
    if ($element[$key]['#type'] == 'file') {
      $code = $element[$key]['#title'];
      $submit = array(
        '#type' => 'submit',
        '#value' => t('Import'),
      );
      unset($element[$key]['#title']);
      $rows[] = array(
        $code,
        drupal_render($element[$key]),
        drupal_render($submit),
      );
    }
  }

  $header = array(
    t('Code'),
    t('Upload'),
    t('Import'),
  );

  $output = drupal_render($element['table']);
  $output .= '<h3>'. t('Import file') .'</h3>';
  $output .= theme('table', $header, $rows);
  $output .= drupal_render($element);
  return $output;
}

function _helmet_get_provincial_code($type='provincial') {

  if ($type == 'provincial') {

    $code = array(
      'C1_01-C2_01',
      'C1_01-C2_02',
      'C1_01-C2_03',

      'C1_02-C2_01-C3_01',
      'C1_02-C2_01-C3_02',
      'C1_02-C2_03-C3_03',

      'C1_03-C2_01-C4_01',
      'C1_03-C2_01-C4_02',
      'C1_03-C2_02-C4_01',
      'C1_03-C2_02-C4_02',
      'C1_03-C2_03-C4_01',
      'C1_03-C2_03-C4_02',
    );
  }
  elseif ($type == 'regional') {
    $code = array(
      'C5_02-C2_01',
      'C5_02-C2_02',
      'C5_02-C2_03',
    );
  }
  elseif ($type == 'all') {
    $code = array(
      'C5_01-C2_01',
      'C5_01-C2_02',
      'C5_01-C2_03',

      'C5_03-C3_01',
      'C5_03-C3_02',
      'C5_03-C3_03',

      'C5_04-C2_01-C4_01',
      'C5_04-C2_01-C4_02',
      'C5_04-C2_02-C4_01',
      'C5_04-C2_02-C4_02',
      'C5_04-C2_03-C4_01',
      'C5_04-C2_03-C4_02',
    );
  }

  return $code;
}

function helmet_get_tree_by_code($code) {
  $tree = array();
  $term_array = explode('-', $code);
  foreach ($term_array as $value) {
    $term_value = explode('_', $value);
    $vid = db_result(db_query("SELECT vid FROM `vocabulary` WHERE name LIKE('%[%s]')", $term_value[0]));
    $tid = db_result(db_query("SELECT td.tid FROM term_data td LEFT JOIN term_synonym ts ON td.tid = ts.tid WHERE vid = %d AND ts.name = %s", $vid,$term_value[1]));
    $tree[] = taxonomy_get_term($tid);
  }
  return $tree;
}

function helmet_get_node_by_code_area($code, $area, $type = 'nid') {
  $sql = "SELECT n.nid 
          FROM node n 
          INNER JOIN term_node tn 
          ON n.nid = tn.nid 
          INNER JOIN term_fields_term tf 
          ON tn.tid = tf.tid
          WHERE n.title = '%s' AND tf.field_area_id = '%s'
          ";
  $nid = db_result(db_query($sql, $code, $area));
  if ($nid) {
    $node = node_load($nid);
    switch ($type) {
      case 'nid': return $nid;
      case 'node': return $node;
      default: return $node->{$type};
    }
  }
  return NULL;
}

