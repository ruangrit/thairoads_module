<?php
$map_year_list = array();
define('HELMET_LEVEL1_COLOR', '#89e2fa');
define('HELMET_LEVEL2_COLOR', '#66bee5');
define('HELMET_LEVEL3_COLOR', '#6aa5de');
define('HELMET_LEVEL4_COLOR', '#fd806f');
define('HELMET_LEVEL5_COLOR', '#f34f4c');

/**
 * Implementation of hook_perm().
 */
function helmet_perm() {
  return array(
    'import helmet data',
  );
}

/**
 * Implementation of hook_menu().
 */
function helmet_menu() {

  $items['admin/settings/helmetimport'] = array(
    'title' => 'Helmet Import',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('helmet_provincial_import_form', 'all'),
    'access arguments' => array('import helmet data'),
    'file' => 'includes/helmet.provincial.inc',
  );


  $items['admin/settings/helmetimport/provincial'] = array(
    'title' => 'Helmet Provincial',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('helmet_provincial_import_form', 'provincial'),
    'access arguments' => array('import helmet data'),
    'file' => 'includes/helmet.provincial.inc',
    'weight' => 0,
    'type' => MENU_LOCAL_TASK,
  );

  $items['admin/settings/helmetimport/regional'] = array(
    'title' => 'Helmet Regional',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('helmet_provincial_import_form', 'regional'),
    'access arguments' => array('import helmet data'),
    'file' => 'includes/helmet.provincial.inc',
    'weight' => -1,
    'type' => MENU_LOCAL_TASK,
  );

  $items['admin/settings/helmetimport/all'] = array(
    'title' => 'Helmet All',
    'weight' => -2,
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );

  $items['statistic/helmet'] = array(
    'title' => t('Statistic of wear a helmet'),
    'page callback' => 'helmet_statistic_catagory_list',
    'access arguments' => array('access content'),
  );

  $items['statistic/helmet/provincial/%'] = array(
    'page callback' => 'helmet_statistic_map_view',
    'access arguments' => array('access content'),
  );

  $items['statistic/helmet/overview/%'] = array(
    'page callback' => 'helmet_statistic_map_view',
    'access arguments' => array('access content'),
  );

  $items['helmet/mapdata'] = array(
    'page callback' => 'helmet_get_map_data',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

function helmet_statistic_catagory_list() {

  $category_list = taxonomy_get_tree(10);
  $category_list2 = taxonomy_get_tree(6);

  $output = '<div><h3>
            อัตาการสวมหมวกนิรภัยในภาพรวม
            </h3></div>';

  foreach ($category_list as $value) {
    $output .= '<div>'.$value->name.'</div>';
  }

  $output .= '<div><h3>
            อัตาการสวมหมวกนิรภัยรายจังหวัด
            </h3></div>';

  foreach ($category_list2 as $value) {
    $output .= '<div>'.$value->name.'</div>';
  }

  return $output;
}

function helmet_statistic_map_view() {

  // Todo remove hardcode
  $code_detail1 = array(
    'id' => array(
      'C1_01-C2_01',
      'C1_01-C2_02', 
      'C1_01-C2_03'
    ),
    'name' => array(
      'ผู้ใหญ่', 
      'วัยรุ่น', 
      'เด็ก'
    ),
  );

  drupal_add_js(drupal_get_path('module', 'helmet').'/js/jquery.svg.package/jquery.svg.js');
  drupal_add_js(drupal_get_path('module', 'helmet').'/js/load_csv.js');
  drupal_add_js(drupal_get_path('module', 'helmet').'/js/print_toggle.js');
  $term = taxonomy_get_term(arg(3));
  $term_field = term_fields_get_fields($term);
  
  $term_list[HELMET_LEVEL1_COLOR] = array('start' => $term_field['helmet_level1_start'], 'end' => $term_field['helmet_level1_end'], 'img' => 'blue01.png');
  $term_list[HELMET_LEVEL2_COLOR] = array('start' => $term_field['helmet_level2_start'], 'end' => $term_field['helmet_level2_end'], 'img' => 'blue02.png');
  $term_list[HELMET_LEVEL3_COLOR] = array('start' => $term_field['helmet_level3_start'], 'end' => $term_field['helmet_level3_end'], 'img' => 'blue03.png');
  $term_list[HELMET_LEVEL4_COLOR] = array('start' => $term_field['helmet_level4_start'], 'end' => $term_field['helmet_level4_end'], 'img' => 'red01.png');
  $term_list[HELMET_LEVEL5_COLOR] = array('start' => $term_field['helmet_level5_start'], 'end' => $term_field['helmet_level5_end'], 'img' => 'red02.png');
  drupal_set_title($term->name);
  $province_list = taxonomy_get_tree(2, 48);
  $map_description = $term->description;

  // Build Breadcrumbs
  $breadcrumb = array();
  $breadcrumb[] = l(t('Home'), '<front>');
  $breadcrumb[] = l('สถิติและข้อมูล', 'statistic');
  $breadcrumb[] = l('อัตราการสวมหมวกนิรภัย', 'statistic/helmet');
  $breadcrumb[] = drupal_get_title(); // Link to current URL
  // Set Breadcrumbs

  drupal_set_breadcrumb($breadcrumb);
  return theme('helmet_map_3col', $term_list, $province_list, arg(3), $code_detail1);

}


$co = '#000';
function helmet_get_map_data() {
  if (empty($_POST["year"])){ die(); }
  // dummy range color

  $code = $_POST['code'];
  $year = $_POST['year'];
  $cat_id = $_POST['catId'];
  
  $level1_color = HELMET_LEVEL1_COLOR;
  $level2_color = HELMET_LEVEL2_COLOR;
  $level3_color = HELMET_LEVEL3_COLOR; 
  $level4_color = HELMET_LEVEL4_COLOR;
  $level5_color = HELMET_LEVEL5_COLOR;

  $term = taxonomy_get_term($cat_id);
  $term = term_fields_get_fields($term);
  $check_term = helmet_map_check_color_field($term);
  if ($check_term) {
    $level1_end = $term['helmet_level1_end'];
    $level2_end = $term['helmet_level2_end'];
    $level3_end = $term['helmet_level3_end'];
    $level4_end = $term['helmet_level4_end'];
    $sub_cate_term = true;
    
  }
  else {
    $level1_end = 999999999999999;
    $level1_color = '#ddd';
    $sub_cate_term = false;
  } 

  $province_list = taxonomy_get_tree(2, 48);
  // Load data each province 
  $result_json = array();
  $result_json['subCateTerm'] = $sub_cate_term;

  foreach($province_list as $k => $province) {
    $sql = "SELECT n.nid FROM node n INNER JOIN term_node tn ON n.nid = tn.nid WHERE n.title = '%s' AND tn.tid = %d";
    $q   = db_query($sql, $code, $province->tid);
    // Default color
    $result_json[$province->tid] = array('name' => $province->name, 'value' => 'ไม่มีข้อมูล', 'color' => '#ddd');
    while ($row = db_fetch_array($q)) {
      $node = node_load($row['nid']);
      $total_value = 0;
      $run_id = 0;
      foreach ($node->field_year_value as $kn => $item) {
        $map_year_list[] = $item['key'];
        if ($item['key'] == $year) {
          $run_id++;
          $total_value = $item['value'];
          if ($item['value'] != 'N/A') {
            $value = $total_value;
              if ($value <= $level1_end) {
                $color = $level1_color;
              }
              elseif ($value <= $level2_end) {
                $color = $level2_color;
              }
              elseif ($value <= $level3_end) {
                $color = $level3_color;
              }
              elseif ($value <= $level4_end) {
                $color = $level4_color;
              }
              else {
                $color = $level5_color;   
              }
            //$value = number_format($value, 3);
            $value = thairoads_num_format($value);
            $result_json[$province->tid] = array('name' => $province->name, 'value' => $value.'%', 'color' => $color);
          }
        }
      }
      
    } 
  } 
  $map_year_list = array_unique($map_year_list);
  rsort($map_year_list);
  $result_json['map_year_list'] = $map_year_list;
  drupal_json($result_json);
  exit();

}

function helmet_map_check_color_field($term_field_data) {
  $fields = array('helmet_level1_start', 'helmet_level1_end', 'helmet_level2_start', 'helmet_level2_end', 'helmet_level3_start', 'helmet_level3_end', 'helmet_level4_start', 'helmet_level4_end', 'helmet_level5_start');
  foreach($fields  as $field) {
    if (is_null($term_field_data[$field]) || $term_field_data[$field] == '') {
      return false;
    }
  }
  return true;
}

/**
 * Implementation of hook_theme().
 */
function helmet_theme() {
  return array(
    'helmet_provincial_import_form' => array(
      'arguments' => array('element' => NULL),
    ),
    'helmet_map_2col' => array(
      'arguments' => array(
        'term_list' => NULL, 
        'province_list' => NULL, 
        'cate_id' => NULL,
        'code_detail' => NULL,
       ),
      'template' => 'helmet-map-2col', 
    ),
    'helmet_map_3col' => array(
      'arguments' => array(
        'term_list' => NULL, 
        'province_list' => NULL, 
        'cate_id' => NULL,
        'code_detail' => NULL,
       ),
      'template' => 'helmet-map-3col', 
    ),
  );
}

/**
 * 
 */
function theme_helmet_provincial_import_form($element) {
  $rows = array();
  foreach (element_children($element) as $key) {
    if ($element[$key]['#type'] == 'file') {
      $code = $element[$key]['#title'];
      $submit = array(
        '#type' => 'submit',
        '#value' => t('Import'),
      );
      unset($element[$key]['#title']);
      $rows[] = array(
        $code,
        drupal_render($element[$key]),
        drupal_render($submit),
      );
    }
  }

  $header = array(
    t('Code'),
    t('Upload'),
    t('Import'),
  );

  $output = drupal_render($element['table']);
  $output .= '<h3>'. t('Import file') .'</h3>';
  $output .= theme('table', $header, $rows);
  $output .= drupal_render($element);
  return $output;
}

function _helmet_get_provincial_code($type='provincial') {

  if ($type == 'provincial') {

    $code = array(
      'C1_01-C2_01',
      'C1_01-C2_02',
      'C1_01-C2_03',

      'C1_02-C2_01-C3_01',
      'C1_02-C2_01-C3_02',
      'C1_02-C2_03-C3_03',

      'C1_03-C2_01-C4_01',
      'C1_03-C2_01-C4_02',
      'C1_03-C2_02-C4_01',
      'C1_03-C2_02-C4_02',
      'C1_03-C2_03-C4_01',
      'C1_03-C2_03-C4_02',
    );
  }
  elseif ($type == 'regional') {
    $code = array(
      'C5_02-C2_01',
      'C5_02-C2_02',
      'C5_02-C2_03',
    );
  }
  elseif ($type == 'all') {
    $code = array(
      'C5_01-C2_01',
      'C5_01-C2_02',
      'C5_01-C2_03',

      'C5_03-C3_01',
      'C5_03-C3_02',
      'C5_03-C3_03',

      'C5_04-C2_01-C4_01',
      'C5_04-C2_01-C4_02',
      'C5_04-C2_02-C4_01',
      'C5_04-C2_02-C4_02',
      'C5_04-C2_03-C4_01',
      'C5_04-C2_03-C4_02',
    );
  }

  return $code;
}

function helmet_get_tree_by_code($code) {
  $tree = array();
  $term_array = explode('-', $code);
  foreach ($term_array as $value) {
    $term_value = explode('_', $value);
    $vid = db_result(db_query("SELECT vid FROM `vocabulary` WHERE name LIKE('%[%s]')", $term_value[0]));
    $tid = db_result(db_query("SELECT td.tid FROM term_data td LEFT JOIN term_synonym ts ON td.tid = ts.tid WHERE vid = %d AND ts.name = %s", $vid,$term_value[1]));
    $tree[] = taxonomy_get_term($tid);
  }
  return $tree;
}

function helmet_get_node_by_code_area($code, $area, $type = 'nid') {
  $sql = "SELECT n.nid 
          FROM node n 
          INNER JOIN term_node tn 
          ON n.nid = tn.nid 
          INNER JOIN term_fields_term tf 
          ON tn.tid = tf.tid
          WHERE n.title = '%s' AND tf.field_area_id = '%s'
          ";
  $nid = db_result(db_query($sql, $code, $area));
  if ($nid) {
    $node = node_load($nid);
    switch ($type) {
      case 'nid': return $nid;
      case 'node': return $node;
      default: return $node->{$type};
    }
  }
  return NULL;
}

